basePath: /
definitions:
  ROOmail_internal_models.Task:
    properties:
      description:
        type: string
      due_date:
        type: string
      file_path:
        description: Путь к файлу, если есть
        type: string
      priority:
        type: string
      title:
        type: string
      user_ids:
        items:
          type: integer
        type: array
    type: object
  ROOmail_internal_models.UsersList:
    properties:
      id:
        type: integer
      username:
        type: string
    type: object
  internal_handlers_auth.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  internal_handlers_auth.LoginResponse:
    properties:
      role:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: Поддержка API
    url: http://www.swagger.io/support
  description: Это документация API для проекта ROOmail.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Документация ROOmail API
  version: "1.0"
paths:
  /admin/file/upload:
    post:
      consumes:
      - multipart/form-data
      description: Загрузка файла на сервер
      parameters:
      - description: Файл для загрузки
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"file_path": "uploaded/file/path"}'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Ошибка разбора формы
          schema:
            type: string
        "500":
          description: Ошибка чтения файла или сохранения файла
          schema:
            type: string
      summary: Загрузка файла
      tags:
      - файлы
  /admin/tasks/create:
    post:
      consumes:
      - application/json
      description: Создает новую задачу с указанными данными
      parameters:
      - description: Данные задачи
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/ROOmail_internal_models.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Задача успешно создана
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Неверный JSON
          schema:
            type: string
        "401":
          description: Неавторизован
          schema:
            type: string
        "500":
          description: Ошибка создания задачи
          schema:
            type: string
      summary: Создание новой задачи
      tags:
      - задачи
  /admin/users_list:
    get:
      consumes:
      - application/json
      description: Возвращает список пользователей с возможностью фильтрации по имени
        пользователя.
      parameters:
      - description: Фильтр по имени пользователя (поддерживает подстроку)
        in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ROOmail_internal_models.UsersList'
            type: array
        "401":
          description: Ошибка авторизации
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка получения пользователей
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить список пользователей
      tags:
      - Users
  /auth/login:
    post:
      consumes:
      - application/json
      description: Аутентифицирует пользователя и возвращает JWT токен
      parameters:
      - description: Имя пользователя и пароль
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/internal_handlers_auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный вход
          schema:
            $ref: '#/definitions/internal_handlers_auth.LoginResponse'
        "400":
          description: Некорректный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Неверное имя пользователя или пароль
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка генерации токена
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вход пользователя
      tags:
      - auth
  /auth/logout:
    post:
      description: Отзывает JWT токен пользователя
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Успешный выход
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Требуется заголовок авторизации или он некорректен
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка отзыва токена
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Выход пользователя
      tags:
      - auth
swagger: "2.0"
